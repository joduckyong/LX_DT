{{>layout/header}}

<div class="right_col" role="main">
	<div class="row">
		<div class="col-md-12">
			<div class="x_panel">
				<div class="x_title">
					<h2>HOME &gt; Adaptor 관리 &gt; Adaptor 유형관리</h2>
					<div class="clearfix"></div>
				</div>
				<div class="x_content">
					<div class="col-12 col-md-12">
						<div class="row">
							<div class="col-md-12">
								<div class="x_panel">
									<div class="cont_title_box">
										<h3>Adaptor 유형관리</h3>
									</div>
									<div class="x_content">
										<div class="table_btns mb-2">
											<button class="btn btn-success" type="button" onclick="adaptorSetAdd();">추가</button>
											<button class="btn btn-danger" type="button" onclick="dpIngestPpInfoDelChk();">삭제</button>
											<button class="btn btn-primary" type="button" onclick="dpIngestPpInfoSave();">저장</button>
										</div>
										<div class="table_responsive">
											<input type="hidden" id="adapter_type_id" value=""> 
											<input type="hidden" id="adaptorSetAddCnt" value="0"> 
											<input type="hidden" id="adaptorConfigSetAddCnt" value="0"> 
											<table class="table table-striped table-bordered bulk_action" style="width: 100%" id="adaptorSetData">
												<colgroup>
													<col width="12px">
													<col width="12px">
													<col width="22px">
													<col width="22px">
													<col width="32px">
												</colgroup>
												<thead>
													<tr>
														<th style="text-align: center;">선택</th>
														<th style="text-align: center;">순번</th>
														<th style="text-align: center;">Adaptor 유형</th>
														<th style="text-align: center;">수집방식</th>
														<th style="text-align: center;">수집유형</th>
													</tr>
												</thead>
												<tbody id="dpIngestPpType">
												</tbody>
											</table>
												
						                    <div class="nav justify-content-center"> 
											  <ul id="pagingul" class="pagination">
											  </ul>                    
						                    </div>   											
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="row" id="adaptorSetDataConfigArea" style="display:none;">
							<div class="col-md-12">
								<div class="x_panel">
									<h3>접속정보 설정</h3>
									<div class="x_content">
										<div class="table_btns mb-2">
											<button class="btn btn-primary" onclick="adaptorSetConfigAdd();">+ 추가</button>
											<button class="btn btn-danger" onclick="dpIngestPpDtDelChk();">- 삭제</button>
											<button class="btn btn-success" onclick="dpIngestPpDtSave();">저장</button>
										</div>
										<div class="table_responsive">
											<input type="hidden" id="hiddenAdapterId" value="">
											<input type="hidden" id="hiddenClctTy" value=""> 
											<input type="hidden" id="hiddenClctMthd" value="">
											<table class="table table-striped table-bordered bulk_action" style="width: 100%" id="adaptorSetDataConfig">
												<colgroup>
													<col width="9px">
													<col width="9px">
													<col width="14px">
													<col width="14px">
													<col width="14px">
													<col width="13px">
													<col width="13px">
													<col width="14px">
												</colgroup>
												<thead>
													<tr>
														<th style="text-align: center;">선택</th>
														<th style="text-align: center;">순번</th>
														<th style="text-align: center;">항목ID(Key)</th>
														<th style="text-align: center;">항목명</th>
														<th style="text-align: center;">항목값</th>
														<th style="text-align: center;">변경가능여부</th>
														<th style="text-align: center;">필수여부</th>
														<th style="text-align: center;">항목 설명</th>
													</tr>
												</thead>
												<tbody id="dpIngestPpInfo">
												</tbody>
											</table>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

</div>
<div id="divForm"></div>

{{>layout/footer}}

<script>

const commonUrl = '/common';
const url = '/adaptor';

let init_page = 1;				//초기 페이지
let page = 1;					//페이지
let init_size_per_page = 10;	//초기 개수
let size_per_page = 10;	 		//가져올 개수
let pageCount = 10;		 		//페이징에 나타낼 페이지 수

let dpIngestPpTypeCnt = 0;
let dpIngestPpInfoCnt = 0;
let connect_id_change;

//수집방식
const dpCmCodesClctMthdInput = function (group_code) {
	
    const data = {
   		url: '/dp/cm/codes/clct_mthd?group_code='+group_code,
    };		
    
    $.ajax({
        type: 'POST',
        url: commonUrl+'/dpCmCodesClctMthd',
        dataType: 'json',
        contentType: 'application/json; charset-utf-8',
        data: JSON.stringify(data)
    }).done(function (data) {
	  	  if (data != null) {
	  		  
    		  if(errorMsg(data)){
  	          	 return;  
       	  	  }	
	  		
		  	   	if(data.contents != ""){    	   
	    	   		 $.each(data.contents, function (idx, el) {
		    	   		 $("#divForm").append($("<input type='hidden' value='"+el.dtl_code_nm+"' id='"+el.dtl_code+"'>"));
		    	   		 
		    	   		 dpCmCodesClctTyInput(el.etc_code);
	 	     	     });
		  	   	}
	  	  }
    }).fail(function (error) {
        alert(JSON.stringify(error));
    });
    
}

//수집유형
const dpCmCodesClctTyInput = function (group_code) {
	
    const data = {
   		url: '/dp/cm/codes/clct_ty?group_code='+group_code,
    };		
    
    $.ajax({
        type: 'POST',
        url: commonUrl+'/dpCmCodesClctTy',
        dataType: 'json',
        contentType: 'application/json; charset-utf-8',
        data: JSON.stringify(data)
    }).done(function (data) {
    	
	  	  if (data != null) {
	  		  
    		  if(errorMsg(data)){
  	          	 return;  
       	  	  }	
	  		
		  	   	if(data.contents != ""){    	    	
	    	   		 $.each(data.contents, function (idx, el) {
	    	   			$("#divForm").append($("<input type='hidden' value='"+el.dtl_code_nm+"' id='"+el.dtl_code+"'>"));
	 	     	     });
		  	   	}
	  	  }
    	  
    }).fail(function (error) {
        alert(JSON.stringify(error));
    });
    
}

//수집방식
const dpCmCodesClctMthd = function (group_code, id) {
	
	$("#"+id).empty();
	
    const data = {
   		url: '/dp/cm/codes/clct_mthd?group_code='+group_code,
    };		
    
    $.ajax({
        type: 'POST',
        url: commonUrl+'/dpCmCodesClctMthd',
        dataType: 'json',
        contentType: 'application/json; charset-utf-8',
        data: JSON.stringify(data)
    }).done(function (data) {
    	
	  	  if (data != null) {
	  		  
    		  if(errorMsg(data)){
  	          	 return;  
       	  	  }	
	  		
		  	   	if(data.contents != ""){    	    	
   					 let selOp = '<option value="">선택</option>';  
	    	   		 $.each(data.contents, function (idx, el) {
 	    				selOp += '<option value="'+el.dtl_code+'|'+el.etc_code+'" value2="'+el.etc_code+'">' + el.dtl_code_nm + '</option>';
	 	     	     });
		 	     	 $("#"+id).append(selOp);        	
		  	   	}
	  	  }
    	  
    }).fail(function (error) {
        alert(JSON.stringify(error));
    });
    
}

//수집방식 선택 
const clctMthdType = function(val){
	let group_code = val.substring(val.indexOf('|')+1);
	dpCmCodesClctTy(group_code, 'clct_ty');
}

//수집유형
const dpCmCodesClctTy = function (group_code, id) {
	
	$("#"+id).empty();
	
    const data = {
   		url: '/dp/cm/codes/clct_ty?group_code='+group_code,
    };		
    
    $.ajax({
        type: 'POST',
        url: commonUrl+'/dpCmCodesClctTy',
        dataType: 'json',
        contentType: 'application/json; charset-utf-8',
        data: JSON.stringify(data)
    }).done(function (data) {
    	
	  	  if (data != null) {
	  		  	
    		  if(errorMsg(data)){
  	          	 return;  
       	  	  }	
	  		
		  	   	if(data.contents != ""){    	    	
   					 let selOp = '<option value="">선택</option>';  
	    	   		 $.each(data.contents, function (idx, el) {
 	    				selOp += '<option value="'+el.dtl_code+'">' + el.dtl_code_nm + '</option>';
	 	     	     });
		 	     	 $("#"+id).append(selOp);        	
		  	   	}
	  	  }
    	  
    }).fail(function (error) {
        alert(JSON.stringify(error));
    });
    
}

//접속정보 설정 추가
const adaptorSetConfigAdd = function(){

	let adaptorSetDataConfigLen = $("#adaptorSetDataConfig tbody tr").length;
	console.log('adaptorSetDataConfigLen: '+adaptorSetDataConfigLen);
	
//	if($("#adaptorConfigSetAddCnt").val() === '0'){
	    let insertTr = '';
        insertTr += '<tr id="trCheckConfig_'+adaptorSetDataConfigLen+'">';
        insertTr += ' <td style="text-align: center;"><input class="tableInfo" type="checkbox" name="checkConfigList2" onclick=checkConfigOnlyOne(this); id="checkConfig_'+adaptorSetDataConfigLen+'" value="'+adaptorSetDataConfigLen+'"></td>';
        insertTr += ' <td style="text-align: center;" id="displauSeq">'+(++adaptorSetDataConfigLen)+'</td>';
        insertTr += ' <td style="text-align: center;"><input type="text" value="" name="configItem" id="configItem" oninput="this.value=this.value.replace(/[^0-9a-zA-Z_]/g, \'\')";></td>';
        insertTr += ' <td style="text-align: center;"><input type="text" value="" name="configIteNm" id="configIteNm"></td>';
        insertTr += ' <td style="text-align: center;"><input type="text" value="" name="configValue" id="configValue"></td>';
        insertTr += ' <td style="text-align: center;"><select id="change_able_yn">';
        insertTr += ' <option value="Y" selected>가능</option><option value="N">불가능</option>';
        insertTr += ' </select></td>';
        insertTr += ' <td style="text-align: center;"><select id="essential_yn">';
        insertTr += ' <option value="Y" selected>필수</option><option value="N">필수아님</option>';
        insertTr += ' </select></td>';
        insertTr += ' <td style="text-align: center;"><input type="text" value="" name="configItemDescribed" id="configItemDescribed"></td>';
        insertTr += '</tr>';
  	    $("#dpIngestPpInfo").append(insertTr);		
//  	  	$("#adaptorConfigSetAddCnt").val(adaptorSetDataConfigLen);
//	}
}

//접속정보 설정 조회
const dpIngestItPpInfo = function(clct_mthd, clct_ty, connect_id){
	
    const data = {
	   		url: '/dp/ingest/instance/property/info',
	   		connect_id: connect_id,	
	   		clct_mthd: clct_mthd,	
	   		clct_ty: clct_ty,	
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpIngestItPpInfo',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
 	    	 
	    	if (data != null) {
		  		/*  
	    		if(errorMsg(data)){
	  	          	 return;  
      	 	 	}	
		  		*/
		  	   	if(data.contents != ""){    	
   		     	    let insertTr = '';
   		     	    let i = 0;	
	  			    $.each(data.contents, function (idx, el) {
	  		  //  		el.connect_id; 	          
	  		  //  		el.item; 	          
	  		  // 		el.item_nm; 	          
	  		  //  		el.item_described; 	          
	  		  //  		el.use_yn; 	          
	  		    		
		     	          insertTr += '<tr>';
		     		      insertTr += ' <td style="text-align: center;"><input class="tableInfo" type="checkbox" name="checkConfigList" onclick=checkConfigOnlyOne(this); id="checkConfig_'+(i+1)+'" value="'+el.item+'"></td>';
		     		      insertTr += ' <td style="text-align: center;" id="displauSeq">'+(++i)+'</td>';
		     		      insertTr += ' <td style="text-align: center;"><input type="text" value="'+isEmpty(el.item)+'" name="configItem" id="configItem_'+i+'" oninput="this.value=this.value.replace(/[^0-9a-zA-Z_]/g, \'\')";></td>';
		     		      insertTr += ' <td style="text-align: center;"><input type="text" value="'+isEmpty(el.item_nm)+'" name="configIteNm" id="configIteNm_'+i+'"></td>';
		     		      insertTr += ' <td style="text-align: center;"><input type="text" value="" name="configValue" id="configValue_'+i+'"></td>';
		     		      insertTr += ' <td style="text-align: center;"><select id="change_able_yn_'+i+'">';
		     		      if(el.change_able_yn === 'Y'){
    		     		      insertTr += ' <option value="Y" selected>가능</option><option value="N">불가능</option>';
		     		      }else{
    		     		      insertTr += ' <option value="Y" selected>가능</option><option value="N">불가능</option>';
		     		      }
		     		      insertTr += ' </select></td>';
		     		      insertTr += ' <td style="text-align: center;"><select id="essential_yn_'+i+'">';
		     		      if(el.essential_yn === 'Y'){
    		     		      insertTr += ' <option value="Y" selected>필수</option><option value="N">필수아님</option>';
		     		      }else{
    		     		      insertTr += ' <option value="Y">필수</option><option value="N" selected>필수아님</option>';
		     		      }
		     		      insertTr += ' </select></td>';
		     		      insertTr += ' <td style="text-align: center;"><input type="text" value="'+isEmpty(el.item_described)+'" name="configItemDescribed" id="configItemDescribed_'+i+'"></td>';
		                  insertTr += '</tr>';
	  		    		
	  			    });
   			  	    
   			  	    dpIngestPpInfoCnt = i;
   	          	    $("#dpIngestPpInfo").append(insertTr);		
   	          	    
			  	}
		  	   	
		  	  }	  
	    	
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });		
}

//접속유형 항목관리 리스트 조회
const dpIngestItPpType = function(adapter_type_id){
	
    const data = {
	   		url: '/dp/ingest/instance/property/type',
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpIngestItPpType',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
 	    	  
	    	if (data != null) {
		  		  
	    		if(errorMsg(data)){
	  	          	 return;  
      	 	 	}	
		  		
		  	   	if(data.contents != ""){    	
	  			    $.each(data.contents, function (idx, el) {
	  			    		
	  			    		let clct_mthd = el.clct_mthd;
	  			    		let clct_ty = el.clct_ty;
	  			    		let connect_id = el.connect_id;
	  			    		dpIngestItPpInfo(clct_mthd, clct_ty, connect_id);
	  			    	
	  			    });
			  	}
		  	  }	  
	    	

	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });		
}

//접속정보 설정 조회
const dpIngestPpInfo = function(adapter_type_id){
	
	$("#dpIngestPpInfo").empty();
	
    const data = {
	   		url: '/dp/ingest/property/info',
	   		adapter_type_id: adapter_type_id,	
	   		clct_mthd: $("#clct_mthd_"+adapter_type_id).val(),	
	   		clct_ty: $("#clct_ty_"+adapter_type_id).val(),	
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpIngestPpInfo',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
 	    	  
		  	  if (data != null) {
		  		  
	    		  if(errorMsg(data)){
	  	          	 return;  
        	  	  }	
		  		
	    		    console.log('adapter_type_id:'+adapter_type_id);
			  	   	if(data.contents != ""){    	
    		     	    let insertTr = '';
    		     	    let i = 0;	
    			  	    $.each(data.contents, function (idx, el) {
    		     	          insertTr += '<tr>';
    		     		      insertTr += ' <td style="text-align: center;"><input class="tableInfo" type="checkbox" name="checkConfigList" onclick=checkConfigOnlyOne(this); id="checkConfig_'+(i+1)+'" value="'+el.item+'"></td>';
    		     		      insertTr += ' <td style="text-align: center;" id="displauSeq">'+(++i)+'</td>';
    		     		      insertTr += ' <td style="text-align: center;"><input type="text" value="'+isEmpty(el.item)+'" name="configItem" id="configItem_'+i+'" oninput="this.value=this.value.replace(/[^0-9a-zA-Z_]/g, \'\')";></td>';
    		     		      insertTr += ' <td style="text-align: center;"><input type="text" value="'+isEmpty(el.item_nm)+'" name="configIteNm" id="configIteNm_'+i+'"></td>';
    		     		      insertTr += ' <td style="text-align: center;"><input type="text" value="'+isEmpty(el.value)+'" name="configValue" id="configValue_'+i+'"></td>';
    		     		      insertTr += ' <td style="text-align: center;"><select id="change_able_yn_'+i+'">';
    		     		      if(el.change_able_yn === 'Y'){
	    		     		      insertTr += ' <option value="Y" selected>가능</option><option value="N">불가능</option>';
    		     		      }else{
	    		     		      insertTr += ' <option value="Y" selected>가능</option><option value="N">불가능</option>';
    		     		      }
    		     		      insertTr += ' </select></td>';
    		     		      insertTr += ' <td style="text-align: center;"><select id="essential_yn_'+i+'">';
    		     		      if(el.essential_yn === 'Y'){
	    		     		      insertTr += ' <option value="Y" selected>필수</option><option value="N">필수아님</option>';
    		     		      }else{
	    		     		      insertTr += ' <option value="Y">필수</option><option value="N" selected>필수아님</option>';
    		     		      }
    		     		      insertTr += ' </select></td>';
    		     		      insertTr += ' <td style="text-align: center;"><input type="text" value="'+isEmpty(el.item_described)+'" name="configItemDescribed" id="configItemDescribed_'+i+'"></td>';
    		                  insertTr += '</tr>';
    			  	    });
    			  	    
    			  	    dpIngestPpInfoCnt = i;
    	          	    $("#dpIngestPpInfo").append(insertTr);		    	   			 
			  	   	}else{
				  	   	dpIngestItPpType(adapter_type_id);
			  	   	}
		  	  }
	    	  
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });		
}

//접속유형 체크
const checkOnlyOne = function(element, id) {

	if(connect_id_change !== id){
	    const checkboxes = document.getElementsByName("checkList");
	    checkboxes.forEach((cb) => {
	        cb.checked = false;
	    })
	    element.checked = true;
	}
    
    if(id === '0'){
	    $("#adaptorSetDataConfigArea").hide();
    }else{
    	
    	var len = $("input[name='checkList']:checked").length;
    	if(len === 0){
		    $("#adaptorSetDataConfigArea").hide();
    	}else{
		    $("#adaptorSetDataConfigArea").show();
		    dpIngestPpInfo(id);
    	}
    }    
    
   	connect_id_change = id;
    
}

//접속정보 설정 체크
const checkConfigOnlyOne = function(element) {

    const checkboxes = document.getElementsByName("checkConfigList");
    checkboxes.forEach((cb) => {
        cb.checked = false;
    })
    element.checked = true;
    
}

//Adapter 유형관리 추가
const adaptorSetAdd = function(){
	
	let adaptorSetDataLen = $("#adaptorSetData tbody tr").length +1;
	
	if($("#adaptorSetAddCnt").val() === '0'){
	    let insertTr = '';
 	    insertTr += '<tr>';
 		insertTr += ' <td style="text-align: center;"><input class="tableInfo" type="checkbox" name="checkList" onclick=checkOnlyOne(this,"0"); id="check_'+adaptorSetDataLen+'" value=""></td>';
 		insertTr += ' <td style="text-align: center;">'+(adaptorSetDataLen)+'</td>';
 		insertTr += ' <td style="text-align: center;"><input type="text" value="" name="adapter_type_nm" id="adapter_type_nm"></td>';
 		insertTr += ' <td style="text-align: center;"><select id="clct_mthd" onchange=clctMthdType(this.value)></select></td>';
 		insertTr += ' <td style="text-align: center;"><select id="clct_ty"></select></td>';
        insertTr += '</tr>';
  	    $("#dpIngestPpType").append(insertTr);
  	    $("#adaptorSetAddCnt").val(adaptorSetDataLen);
  	    
  	  	dpCmCodesClctMthd('D34', 'clct_mthd');
	}
}

//Adapter 유형관리 리스트 조회
const dpIngestPpType = function(page, size_per_page){
	
	if(!page){
		page = init_page;
	}
	if(!size_per_page){
		size_per_page = init_size_per_page;
	}
	
    const data = {
	   		url: '/dp/ingest/property/type',
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',
	   		page_current: page,	   		
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpIngestPpType',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
 	    	  $("#dpIngestPpType").empty();
		  	  if (data != null) {
		  		  
	    		  if(errorMsg(data)){
	  	          	 return;  
        	  	  }	
		  		
			  	   	if(data.contents != ""){    	
    		     	    let insertTr = '';
    		     	    let i = 0;	
    			  	    $.each(data.contents, function (idx, el) {
    		     	          insertTr += '<tr>';
    		     		      insertTr += ' <td style="text-align: center;"><input class="tableInfo" type="checkbox" name="checkList" onclick=checkOnlyOne(this,"'+el.adapter_type_id+'"); id="check_'+i+'" value="'+el.adapter_type_id+'"></td>';
    		     		      insertTr += ' <td style="text-align: center;">'+(++i)+'</td>';
    		     		      insertTr += ' <td style="text-align: center;"><input type="text" value="'+el.adapter_type_nm+'" name="adapter_type_nm" id="adapter_type_nm_'+el.adapter_type_id+'"></td>';
    		     		      insertTr += ' <td style="text-align: center;"><select id="clct_mthd_'+el.adapter_type_id+'"><option value="'+isEmpty(el.clct_mthd)+'">'+isEmpty($("#"+el.clct_mthd).val())+'</option></select></td>';
    		     		      insertTr += ' <td style="text-align: center;"><select id="clct_ty_'+el.adapter_type_id+'"><option value="'+isEmpty(el.clct_ty)+'">'+isEmpty($("#"+el.clct_ty).val())+'</option></select></td>';
    		                  insertTr += '</tr>';
    			  	    });
    			  	    dpIngestPpTypeCnt = i;
    	          	    $("#dpIngestPpType").append(insertTr);		    	   			 
			  	   	}
			  	   	
		  	    	//페이징 보여줌
		  	    	paging(data.total_count, size_per_page, pageCount, page);			  	   	
		  	  }
	    	  
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });	
}

//접속정보 설정 선택 삭제
const dpIngestPpDtDel = function(adapter_type_id, item){
	
	let message = '';
	const data = {
	   		url: '/dp/ingest/property/detail/delete',
	   		adapter_type_id: adapter_type_id,	
	   		clct_mthd: $("#clct_mthd_"+adapter_type_id).val(),	
	   		clct_ty: $("#clct_ty_"+adapter_type_id).val(),	
	   		item: item,	
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',
	    };		
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpIngestPpDtDel',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
	  		
  		  if(errorMsg(data)){
	          	 return;  
   	  	  }	
	    	
	    	message = JSON.stringify(data.return_msg);
	    	
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });	
	    
	    if(message !==''){
		  	alert(message.replace(/\"/gi, ''));
	    }	    
}

//접속정보 설정 삭제전 체크
const dpIngestPpDtDelChk = function(){
	
	if(confirm('삭제 하시겠습니까?')) {
		let adapter_type_id;
	    $("input[name='checkList']:checked").each(function(e){
	    	adapter_type_id = $(this).val();
	    });
	    
	    $("input[name='checkConfigList2']:checked").each(function(e){
	    	
	    	let check_config = $(this).val();
	    	$("#trCheckConfig_"+check_config).remove();
	    	
	    });   	
	    
	    $("input[name='checkConfigList']:checked").each(function(e){
			const data = {
			   		url: '/dp/ingest/property/detail/delete/check',
			   		adapter_type_id: adapter_type_id,	
			   		clct_mthd: $("#clct_mthd_"+adapter_type_id).val(),	
			   		clct_ty: $("#clct_ty_"+adapter_type_id).val(),	
			   		item: item,	
			   		user_id: 'user00',	
			   		menu_id: 'menu_id',
			    };		
			    $.ajax({
			        type: 'POST',
			        url: url+'/dpIngestPpDtDelChk',
			        dataType: 'json',
			        contentType: 'application/json; charset-utf-8',
			        data: JSON.stringify(data)
			    }).done(function (data) {
			  		
			    	if (data != null) {
				  	   	if(data.contents != ""){    	
			    	   		 $.each(data.contents, function (idx, el) {
			    	   			if(el.chk_yn == 'N'){
			    	   				dpIngestPpDtDel(adapter_type_id, item);
			    	   			}
			 	     	     });
				  	   	}
			  	  } 
			    	
			    	
			    }).fail(function (error) {
			        alert(JSON.stringify(error));
			    });
	    	
	    });   	
	}
}

//Adapter 유형관리 선택 삭제
const dpIngestPpInfoDel = function(adapter_type_id){

	const data = {
	   		url: '/dp/ingest/property/info/delete',
	   		adapter_type_id: adapter_type_id,	
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',
	    };		
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpIngestPpInfoDel',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
	  		
  		  if(errorMsg(data)){
	          	 return;  
   	  	  }	
	    	
	  		let message = JSON.stringify(data.return_msg);
	  		alert(message.replace(/\"/gi, ''));
	  		dpIngestPpType();
	  		
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });		
}

//Adapter 유형관리 삭제전 체크
const dpIngestPpInfoDelChk = function(){

	var len = $("input[name='checkList']:checked").length;
	if(len === 0){
		alert("하나이상 선택해주세요!");
		return;
	}
	if(confirm('삭제 하시겠습니까?')) {
		
		let adapter_type_id;
	    $("input[name='checkList']:checked").each(function(e){
	    	adapter_type_id = $(this).val();
	    });
	    
	    console.log('adapter_type_id:'+adapter_type_id);
	    
		if(adapter_type_id === ''){
	    	
	    	$('#adaptorSetData > tbody > tr:last').remove();
	    	$("#adaptorSetAddCnt").val("0");
	    	
	    }else{
	    	
			const data = {
			   		url: '/dp/ingest/property/info/delete/check',
			   		adapter_type_id: adapter_type_id,	
			   		user_id: 'user00',	
			   		menu_id: 'menu_id',
			    };		
			    $.ajax({
			        type: 'POST',
			        url: url+'/dpIngestPpInfoDelChk',
			        dataType: 'json',
			        contentType: 'application/json; charset-utf-8',
			        data: JSON.stringify(data)
			    }).done(function (data) {
			  		
			    	if (data != null) {
			    		
			    		  if(errorMsg(data)){
			  	          	 return;  
		        	  	  }	
			    		
				  	   	if(data.contents != ""){    	
			    	   		 $.each(data.contents, function (idx, el) {
			    	   			if(el.chk_yn == 'N'){
			    	   				dpIngestPpInfoDel(adapter_type_id);
			    	   			}else{
			    	   				alert("사용중입니다.");
			    	   				return;
			    	   			}
			 	     	     });
				  	   	}
			  	  } 
			    	
			    	
			    }).fail(function (error) {
			        alert(JSON.stringify(error));
			    });	
	    }
	}
}

//접속정보 설정 저장
const dpIngestPpDtSave = function(){
	
	let message;
	if(confirm('저장 하시겠습니까?')) {
		let adapter_type_id;
	    $("input[name='checkList']:checked").each(function(e){
	    	adapter_type_id = $(this).val();
	    });
	    
	    $.each($("#adaptorSetDataConfig tbody tr"), function(){
		    
			const data = {
			   		url: '/dp/ingest/property/detail/save',
			   		adapter_type_id: adapter_type_id,	
			   		clct_mthd: $("#clct_mthd_"+adapter_type_id).val(),	
			   		clct_ty: $("#clct_ty_"+adapter_type_id).val(),	
			   		user_id: 'user00',	
			   		menu_id: 'menu_id',
			   		displau_seq: Number($(this).find("#displauSeq").text()),
			   		item: $(this).find("#configItem").val(),
			   		item_nm: $(this).find("#configIteNm").val(),
			   		value: $(this).find("#configValue").val(),
			   		change_able_yn: $(this).find("#change_able_yn").val(),
			   		essential_yn: $(this).find("#essential_yn").val(),
			   		item_described: $(this).find("#configItemDescribed").val(),
			   		
			   		/*
			   		displau_seq: $("#displauSeq").text(),
			   		item: $("#configItem").val(),
			   		item_nm: $("#configIteNm").val(),
			   		value: $("#configValue").val(),
			   		change_able_yn: $("#change_able_yn").val(),
			   		essential_yn: $("#essential_yn").val(),
			   		item_described: $("#configItemDescribed").val(),
			   		*/
			    };		
			
				console.log('data : '+JSON.stringify(data));

			    $.ajax({
			        type: 'POST',
			        url: url+'/dpIngestPpDtSave',
			        dataType: 'json',
			        contentType: 'application/json; charset-utf-8',
			        data: JSON.stringify(data)
			    }).done(function (data) {
			  		
		    		  if(errorMsg(data)){
		  	          	 return;  
	        	  	  }	
			    	
			  		
			    }).fail(function (error) {
			        alert(JSON.stringify(error));
			    });		
	    }); 
	    
 		alert("저장되었습니다.");
 		$("#adaptorConfigSetAddCnt").val("0");
	    dpIngestPpInfo(adapter_type_id);
	}
}

//Adapter 유형관리 저장
const dpIngestPpInfoSave = function(){
	
	if($("#adapter_type_nm").val() === ''){
		alert("Adaptor 유형을 입력해주세요!");
		$("#adapter_type_nm").focus();
		return;
	}
	if($("#clct_mthd").val() === ''){
		alert("수집방식 을 선택해주세요!");
		$("#clct_mthd").focus();
		return;
	}
	if($("#clct_ty").val() === ''){
		alert("수집유형을 선택해주세요!");
		$("#clct_ty").focus();
		return;
	}
	if(confirm('저장 하시겠습니까?')) {
		const data = {
		   		url: '/dp/ingest/property/info/save',
		   		adapter_type_nm: $("#adapter_type_nm").val(),	
		   		clct_mthd: $('#clct_mthd').val().substring(0,$('#clct_mthd').val().indexOf('|')),	
		   		clct_ty: $("#clct_ty").val(),	
		   		user_id: 'user00',	
		   		menu_id: 'menu_id',
		    };		
		    $.ajax({
		        type: 'POST',
		        url: url+'/dpIngestPpInfoSave',
		        dataType: 'json',
		        contentType: 'application/json; charset-utf-8',
		        data: JSON.stringify(data)
		    }).done(function (data) {
		  		
	    		  if(errorMsg(data)){
	  	          	 return;  
        	  	  }	
		    	
		  		let message = JSON.stringify(data.return_msg);
		  		alert(message.replace(/\"/gi, ''));
		    	
		  		$("#adaptorSetAddCnt").val("0");
		  		dpIngestPpType();
		  		
		    }).fail(function (error) {
		        alert(JSON.stringify(error));
		    });	
	}
}

//페이징 함수 호출
const pagingFun = function(page, size_per_page){
	dpIngestPpType(page, size_per_page);
}

dpCmCodesClctMthdInput('D34');

setTimeout(dpIngestPpType, 300);
</script>

