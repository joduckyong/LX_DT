{{>layout/header}}

        <div class="right_col" role="main">
          <div class="row">
            <div class="col-md-12">
              <div class="x_panel"> 
                <div class="x_title"> 
                  <h2>HOME > 모니터링</h2>
                  <div class="clearfix"> </div>
                </div>
                <div class="x_content"> <br>
                  <div class="progress_tab">
                    <div class="tab_item" id="tab-0">
                      <div class="row">
                        <div class="col-12 col-md-4 mx-0">
                          <h4 class="center_title">수집현황
							<select class="" id="moniteringYear" name="moniteringYear" onchange="dpCmMonitoringIngestYear(this.value);">
                            </select>                        
                          </h4>
                          <div id="divBarChart"><canvas id="barChart"></canvas></div>
						  <div class="table_responsive scroll_y">
                            <table class="table table-striped table-bordered bulk_action">
                              <colgroup>
                                <col width="55px">
                              </colgroup>
                              <thead>
                                <tr id="gridTitle">
                                </tr>
                              </thead>
                              <tbody id="gridData">
                                <tr id="gridData1">
                                </tr>
                                <tr id="gridData2">
                                </tr>
                                <tr id="gridData3">
                                </tr>
                              </tbody>
                            </table>
                          </div>                          
                        </div>
                        <div class="col-12 col-md-4 mx-0" id="divPieChart1">
                          <h4 class="center_title">수집동작현황(Adapter)</h4>
                          <canvas id="pieChart1"></canvas>
						  <div class="table_responsive scroll_y">
                            <table class="table table-striped table-bordered bulk_action">
                              <colgroup>
                                <col width="50%">
                                <col width="50%">
                              </colgroup>
                              <thead>
                              </thead>
                              <tbody>
                                <tr>
                                  <td style="text-align: center;">Adapter 동작건수</td>
                                  <td style="text-align: center;"><span id="adapter_start_txt"></span></td>
                                </tr>
                                <tr>
                                  <td style="text-align: center;">Adapter 중지건수</td>
                                  <td style="text-align: center;"><span id="adapter_stop_txt"></span></td>
                                </tr>
                              </tbody>
                            </table>
                          </div>                              
                        </div>
                        <div class="col-12 col-md-4 mx-0" id="divPieChart2" style="display:none;">
                          <h4 class="center_title">수집동작현황(Instance)</h4>
                          <canvas id="pieChart2"></canvas>
						  <div class="table_responsive scroll_y">
                            <table class="table table-striped table-bordered bulk_action">
                              <colgroup>
                                <col width="50%">
                                <col width="50%">
                              </colgroup>
                              <thead>
                              </thead>
                              <tbody>
                                <tr>
                                  <td style="text-align: center;">Instance 동작</td>
                                  <td style="text-align: center;"><span id="instance_start_txt"></span></td>
                                </tr>
                                <tr>
                                  <td style="text-align: center;">Instance 중지</td>
                                  <td style="text-align: center;"><span id="instance_stop_txt"></span></td>
                                </tr>
                                <tr>
                                  <td style="text-align: center;">Instance 오류 중지</td>
                                  <td style="text-align: center;"><span id="instance_error_txt"></span></td>
                                </tr>
                              </tbody>
                            </table>
                          </div>                              
                        </div>
                        <div class="col-12 col-md-4 mx-0" id="divPieChart3">
                          <h4 class="center_title">서버동작현황</h4>
                          <canvas id="pieChart3"></canvas>
						  <div class="table_responsive scroll_y">
                            <table class="table table-striped table-bordered bulk_action">
                              <colgroup>
                                <col width="50%">
                                <col width="50%">
                              </colgroup>
                              <thead>
                              </thead>
                              <tbody>
                                <tr>
                                  <td style="text-align: center;">동작건수</td>
                                  <td style="text-align: center;"><span id="server_start_txt"></span></td>
                                </tr>
                                <tr>
                                  <td style="text-align: center;">중지건수</td>
                                  <td style="text-align: center;"><span id="server_stop_txt"></span></td>
                                </tr>
                              </tbody>
                            </table>
                          </div>                              
	                   	  <div class="right_btns"> 
	                       		<button class="btn btn-success" onclick="serverStatusPage();">서버동작 바로가기</button>
	                      </div>                        
                        </div>
                      </div>
                      
					  <div class="row">
						<div class="col-md-12">
							<div class="x_content">
			                    <div class="cont_title_box"> 
			                      <div><h3>로그목록</h3><label style="text-align: center;color: red;">※최신10건만표기합니다.</label></div>
			                      <div class="right_btns"> 
			                        <button class="btn btn-success" onclick="logPage();">로그 바로가기</button>
			                      </div>
			                    </div>							
							</div>
						</div>
					  </div>                  
                      <div class="row">
                        <div class="col-12 col-md-12 mx-0">
                          <div class="table_responsive scroll_y">
                            <table class="table table-striped table-bordered bulk_action">
                              <colgroup>
                                <col width="20%">
                                <col width="10%">
                                <col width="20%">
                                <col width="50%">
                              </colgroup>
                              <thead>
                                <tr>
                                  <th style="text-align: center;">적재시간</th>
                                  <th style="text-align: center;">Adapter명</th>
                                  <th style="text-align: center;">상태</th>
                                  <th style="text-align: center;">로그메세지</th>
                                </tr>
                              </thead>
                              <tbody id="dpCmMoniteringLogs">
                              </tbody>
                            </table>
                          </div>
                        </div>
                      </div>
                                            
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- modal -->        
		<div class="modal fade add_modal" id="log_modal" tabindex="-1" role="dialog" aria-hidden="true">
          <div class="modal-dialog modal-lg" style="max-width: 800px;">
            <div class="modal-content">
              <div class="modal-header">
                <h2 class="modal-title" id="myModalLabel"><span id="modelLabel">로그상세</span></h2>
                <button class="close" type="button" data-dismiss="modal"></button><span aria-hidden="true">&times;</span>
              </div>
              <div class="modal-body">
				<div class="x_content">
                  <div class="border_rows">
                    <div class="row">
                      <div class="form-group row col-12 col-md-12">
                        <div class="control-label" style="text-align: center;">적재시간</div>
                        <div class="form-control_box" style="text-align: center;"><span id="log_dt_txt"></span></div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="form-group row col-12 col-md-6">
                        <div class="control-label" style="text-align: center;">Adapter명</div>
                        <div class="form-control_box"><span id="adapter_nm_txt"></span></div>
                      </div>
                      <div class="form-group row col-12 col-md-6">
                        <div class="control-label" style="text-align: center;">인스턴스명</div>
                        <div class="form-control_box"><span id="instance_nm_txt"></span></div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="form-group row col-12 col-md-6">
                        <div class="control-label" style="text-align: center;">수집방식</div>
                        <div class="form-control_box"><span id="clct_mthd_txt"></span></div>
                      </div>
                      <div class="form-group row col-12 col-md-6">
                        <div class="control-label" style="text-align: center;">수집유형</div>
	  					   <div class="form-control_box"><span id="clct_ty_txt"></span></div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="form-group row col-12 col-md-6">
                        <div class="control-label" style="text-align: center;">상태</div>
                        <div class="form-control_box"><span id="log_desc_txt"></span></div>
                      </div>
                      <div class="form-group row col-12 col-md-6">
                        <div class="control-label" style="text-align: center;">적재테이블</div>
	 					   <div class="form-control_box"><span id="st_datamodel_txt"></span></div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="form-group row col-12 col-md-12">
                        <div class="control-label" style="text-align: center;">수신데이터</div>
                        <div class="form-control_box"><textarea id="data_before_txt" style="height: 140px;width:600px;"></textarea></div>
                      </div>
                    </div>
                    
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>        
        
        <div class="modal fade add_modal" id="server_start_modal" tabindex="-1" role="dialog" aria-hidden="true">
          <div class="modal-dialog modal-md">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel"><span id="modelLabel">동작현황</span></h4>
                <button class="close" type="button" data-dismiss="modal"></button><span aria-hidden="true">&times;</span>
              </div>
              <div class="modal-body">
                <div class="x_content"> 
                  <div class="table_responsive" style="height: 300px; overflow: auto">
                    <table class="table table-striped">
                      <colgroup> 
                        <col width="60%">
                        <col width="40%">
                      </colgroup>
                      <thead>
                        <tr> 
                          <th style="text-align: center;">서버 명칭</th>
                          <th style="text-align: center;">상태</th>
                        </tr>
                      </thead>
                      <tbody id="dpCmMonitoringHealthStart">
                      </tbody>
                    </table>
                    <div class="nav justify-content-center"> 
                      <ul id="pagingul" class="pagination">
					  	</ul> 
                    </div>                    
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>   
        
        <div class="modal fade add_modal" id="server_end_modal" tabindex="-1" role="dialog" aria-hidden="true">
          <div class="modal-dialog modal-md">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel"><span id="modelLabel">중지현황</span></h4>
                <button class="close" type="button" data-dismiss="modal"></button><span aria-hidden="true">&times;</span>
              </div>
              <div class="modal-body">
                <div class="x_content"> 
                  <div class="table_responsive" style="height: 300px; overflow: auto">
                    <table class="table table-striped">
                      <colgroup> 
                        <col width="60%">
                        <col width="40%">
                      </colgroup>
                      <thead>
                        <tr> 
                          <th style="text-align: center;">서버 명칭</th>
                          <th style="text-align: center;">상태</th>
                        </tr>
                      </thead>
                      <tbody id="dpCmMonitoringHealthStop">
                      </tbody>
                    </table>
                    <div class="nav justify-content-center"> 
                      <ul id="pagingul2" class="pagination">
					  	</ul> 
                    </div>                    
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>   
        
{{>layout/footer}}        

<script>
const commonUrl = '/common';
const url = '/monitoring';


//bar 차트 
const barChart = function(chartTitle, data1, data2, data3, level, year){
	
    $('#barChart').remove(); // this is my <canvas> element
	$('#divBarChart').append('<canvas id="barChart"><canvas>');	
    
	let bgcolor1 = [];
	let bgcolor2 = [];
	let bgcolor3 = [];
	let bordercolor1 = [];	
	let bordercolor2 = [];	
	let bordercolor3 = [];	
	chartTitle.forEach(function(titile, index){
		bgcolor1.push('rgba(54, 162, 235, 0.2)');
		bgcolor2.push('rgba(255, 206, 86, 0.2)');
		bgcolor3.push('rgba(255, 99, 132, 0.2)');
		bordercolor1.push('rgba(54, 162, 235, 1)');
		bordercolor2.push('rgba(255, 206, 86, 1)');
		bordercolor3.push('rgba(255, 99, 132, 1)');
	});
	
	var context = document.getElementById('barChart').getContext('2d');
	var myChart = new Chart(context, {
		type: 'bar', // 차트의 형태
		data: { // 차트에 들어갈 데이터
		    labels: chartTitle,
		    datasets: [
		        { //데이터
		            label: '요청건수', //차트 제목
		            fill: false, // line 형태일 때, 선 안쪽을 채우는지 안채우는지
		            data: data1,
		            backgroundColor: bgcolor1,
		            borderColor: bordercolor1,
		            borderWidth: 1 //경계선 굵기
		        }
		       ,{ //데이터
		            label: '적재건수', //차트 제목
		            fill: false, // line 형태일 때, 선 안쪽을 채우는지 안채우는지
		            data: data2,
		            backgroundColor: bgcolor2,
		            borderColor: bordercolor2,
		            borderWidth: 1 //경계선 굵기
		        }		        
		       ,{ //데이터
		            label: '오류건수', //차트 제목
		            fill: false, // line 형태일 때, 선 안쪽을 채우는지 안채우는지
		            data: data3,
		            backgroundColor: bgcolor3,
		            borderColor: bordercolor3,
		            borderWidth: 1 //경계선 굵기
		        }		        
		             
		    ]
		},
		options: {
		    scales: {
		        yAxes: [
		            {
		                ticks: {
		                    beginAtZero: true
		                }
		            }
		        ]
		    },
		    onClick: (e) => {
		    	
				 var activePoints = myChart.getElementsAtEvent(e);
				 if(activePoints.length > 0)
				 {
				     //get the internal index of slice in pie chart
				     var clickedElementindex = activePoints[0]["_index"];
				
				     //get specific label by index 
				     var label = myChart.data.labels[clickedElementindex];
				     console.log('label:'+label);
				     
				     if(level == '2'){
				    	 dpCmMonitoringIngestMonth(label);
				     }else if(level == '3'){
				    	 dpCmMonitoringIngestIt(year, label);
				     }
				     /*
				     //get value by index      
				     var value = myChart.data.datasets[0].data[clickedElementindex];
				     var value1 = myChart.data.datasets[1].data[clickedElementindex];
				     var value2 = myChart.data.datasets[2].data[clickedElementindex];
				     // label and value Process
				     console.log('value:'+value);			     
				     console.log('value1:'+value1);			     
				     console.log('value2:'+value2);			     
				     */
				}
				
		    }    
		}
	});
}

//pie 차트
const pieChart1 = function(datas){
	
	var context = document.getElementById('pieChart1').getContext('2d');
	var myChart = new Chart(context, {
		type: 'pie', // 차트의 형태
		data: { // 차트에 들어갈 데이터
		    labels: [
		        //x 축
		        'Adapter 동작건수','Adapter 중지건수'
		    ],
		    datasets: [
		        { //데이터
		            label: '수집동작현황(Adapter)', //차트 제목
		            fill: false, // line 형태일 때, 선 안쪽을 채우는지 안채우는지
		            data: datas,
		            backgroundColor: [
		                //색상
		                'rgba(54, 162, 235, 0.2)',
		                'rgba(255, 153, 102, 0.2)'
		            ],
		            borderColor: [
		                //경계선 색상
		                'rgba(54, 162, 235, 1)',
		                'rgba(255, 153, 102, 1)'
		            ],
		            borderWidth: 1 //경계선 굵기
		        }
		    ]
		},
		options: {
		    scales: {
		        yAxes: [
		            {
		                ticks: {
		                    beginAtZero: true
		                }
		            }
		        ]
		    },
		    onClick: (e) => {
				 var activePoints = myChart.getElementsAtEvent(e);
//				 console.log('activePoints:'+activePoints);
				 if(activePoints.length > 0)
				 {
				     //get the internal index of slice in pie chart
				     var clickedElementindex = activePoints[0]["_index"];
				
				     //get specific label by index 
				     var label = myChart.data.labels[clickedElementindex];
				     console.log('label:'+label);
				     
				     //get value by index      
				     var value = myChart.data.datasets[0].data[clickedElementindex];
				     // label and value Process
				     console.log('value:'+value);			     
				     
			    	$("#divPieChart1").hide();
			    	$("#divPieChart2").show();
				     
				}
		    }
		}
	});
}

//Pie 차트 
const pieChart2 = function(datas){
	
	var context = document.getElementById('pieChart2').getContext('2d');
	var myChart = new Chart(context, {
		type: 'pie', // 차트의 형태
		data: { // 차트에 들어갈 데이터
		    labels: [
		        //x 축
		        'Instance 동작','Instance 중지','Instance 오류 중지'
		    ],
		    datasets: [
		        { //데이터
		            label: '수집동작현황(Instance)', //차트 제목
		            fill: false, // line 형태일 때, 선 안쪽을 채우는지 안채우는지
		            data: datas,
		            backgroundColor: [
		                //색상
		                'rgba(54, 162, 235, 0.2)',
		                'rgba(255, 153, 102, 0.2)',
		                'rgba(255, 000, 051, 0.2)'
		            ],
		            borderColor: [
		                //경계선 색상
		                'rgba(54, 162, 235, 1)',
		                'rgba(255, 153, 102, 1)',
		                'rgba(255, 000, 051, 1)'
		            ],
		            borderWidth: 1 //경계선 굵기
		        }
		    ]
		},
		options: {
		    scales: {
		        yAxes: [
		            {
		                ticks: {
		                    beginAtZero: true
		                }
		            }
		        ]
		    },
/*		    
		    onClick: (e) => {
				 var activePoints = myChart.getElementsAtEvent(e);
				 if(activePoints.length > 0)
				 {
				     //get the internal index of slice in pie chart
				     var clickedElementindex = activePoints[0]["_index"];
				
				     //get specific label by index 
				     var label = myChart.data.labels[clickedElementindex];
				     console.log('label:'+label);
				     
				     //get value by index      
				     var value = myChart.data.datasets[0].data[clickedElementindex];
				     // label and value Process
				     console.log('value:'+value);			     
				     
			    	$("#divPieChart1").show();
			    	$("#divPieChart2").hide();
				     
				}
		    }
*/		    
		}
	});
}

//pie 차트
const pieChart3 = function(datas){
	
	var context = document.getElementById('pieChart3').getContext('2d');
	var myChart = new Chart(context, {
		type: 'pie', // 차트의 형태
		data: { // 차트에 들어갈 데이터
		    labels: [
		        //x 축
		        '동작건수','중지건수'
		    ],
		    datasets: [
		        { //데이터
		            label: '서버동작현황', //차트 제목
		            fill: false, // line 형태일 때, 선 안쪽을 채우는지 안채우는지
		            data: datas,
		            backgroundColor: [
		                //색상
		                'rgba(54, 162, 235, 0.2)',
		                'rgba(255, 153, 102, 0.2)'
		            ],
		            borderColor: [
		                //경계선 색상
		                'rgba(54, 162, 235, 1)',
		                'rgba(255, 153, 102, 1)'
		            ],
		            borderWidth: 1 //경계선 굵기
		        }
		    ]
		},
		options: {
		    scales: {
		        yAxes: [
		            {
		                ticks: {
		                    beginAtZero: true
		                }
		            }
		        ]
		    },
		    onClick: (e) => {
				 var activePoints = myChart.getElementsAtEvent(e);
				 if(activePoints.length > 0)
				 {
				     //get the internal index of slice in pie chart
				     var clickedElementindex = activePoints[0]["_index"];
				
				     //get specific label by index 
				     var label = myChart.data.labels[clickedElementindex];
				     console.log('label:'+label);
				     
				     //get value by index      
				     var value = myChart.data.datasets[0].data[clickedElementindex];
				     // label and value Process
				     console.log('value:'+value);			     
				     
				     if(label == '동작건수'){
				    	 dpCmMonitoringHealthStart();
				     }else if(label == '중지건수'){
				    	 dpCmMonitoringHealthStop();
				     }
				}
		    }		    
		    
		}
	});
}
//데이터로그 상세팝업
const dpCmMoniteringLogsPopup = function(id, log_type){
	
	$('#log_modal').modal('show');
	
    const data = {
	   		url: '/dp/cm/monitoring/logs/popup',
	   		id: id,	
	   		log_type: log_type,	
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',	 
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpCmMoniteringLogsPopup',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
		  	  if (data != null) {
		  		  
        		  if(errorMsg(data)){
            			return;  
           		  }	
		  		
			  	   	if(data.contents != ""){    	
				  	   	$("#log_dt_txt").text(isEmpty(data.contents[0].log_dt));
				  	   	$("#adapter_nm_txt").text(isEmpty(data.contents[0].adapter_nm));
				  	   	$("#instance_nm_txt").text(isEmpty(data.contents[0].instance_nm));
				  	   	$("#clct_mthd_txt").text(isEmpty(data.contents[0].clct_mthd));
				  	   	$("#clct_ty_txt").text(isEmpty(data.contents[0].clct_ty));
				  	   	$("#log_desc_txt").text(isEmpty(data.contents[0].log_desc));
				  	   	$("#st_datamodel_txt").text(isEmpty(data.contents[0].st_datamodel));
				  	   	$("#data_before_txt").text(isEmpty(data.contents[0].data_before));
			  	   	}
		  	  }
	    	  
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });			
}

//데이터로그
const dpCmMoniteringLogs = function(){
	
	$("#dpCmMoniteringLogs").empty();	
    const data = {
	   		url: '/dp/cm/monitoring/logs',
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',	 
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpCmMoniteringLogs',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
		  	  if (data != null) {
		  		  
        		  if(errorMsg(data)){
            			return;  
            	  }			  		
			  	   	if(data.contents != ""){    	
    		     	    let insertTr = '';
    			  	    $.each(data.contents, function (idx, el) {
  		     	          insertTr += '<tr style="cursor:pointer" onclick=dpCmMoniteringLogsPopup('+el.id+',"'+el.log_type+'")>';
		     		      insertTr += ' <td>'+isEmpty(el.log_dt)+'</td>';
		     		      insertTr += ' <td>'+isEmpty(el.adapter_nm)+'</td>';
		     		      insertTr += ' <td>'+isEmpty(el.log_desc)+'</td>';
		     		      insertTr += ' <td>'+isEmpty(el.payload)+'</td>';
		                  insertTr += '</tr>';
    			  	    });	  			  	    
	  	          	    $("#dpCmMoniteringLogs").append(insertTr);		    			  	    
			  	   	}
		  	  }
	    	  
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });			
}

//수집동작현황
const dpCmMoniteringStatus = function(){
	
    const data = {
	   		url: '/dp/cm/monitoring/status',
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',	   	
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpCmMoniteringStatus',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
		  	  if (data != null) {
		  		  
        		  if(errorMsg(data)){
	          	 	 return;  
          	  	  }		  		
			  	   	if(data.contents != ""){    	
			  	   		
			  	   		let adapter_start = isEmpty(data.contents[0].adapter_start) === '' ? 0:isEmpty(data.contents[0].adapter_start);
			  	   		let adapter_stop = isEmpty(data.contents[0].adapter_stop) === '' ? 0:isEmpty(data.contents[0].adapter_stop);
			  	   		let instance_start = isEmpty(data.contents[0].instance_start) === '' ? 0:isEmpty(data.contents[0].instance_start);
			  	   		let instance_stop = isEmpty(data.contents[0].instance_stop) === '' ? 0:isEmpty(data.contents[0].instance_stop);
			  	   		let instance_error = isEmpty(data.contents[0].instance_error) === '' ? 0:isEmpty(data.contents[0].instance_error);
			  	   		$("#adapter_start_txt").text(adapter_start);
			  	   		$("#adapter_stop_txt").text(adapter_stop);
			  	   		$("#instance_start_txt").text(instance_start);
			  	   		$("#instance_stop_txt").text(instance_stop);
			  	   		$("#instance_error_txt").text(instance_error);
			  	   		
			  	   		let pieChartData1 = [];
			  	   		pieChartData1.push(adapter_start);
			  	  		pieChartData1.push(adapter_stop);
			  	   	    
			  	   		let pieChartData2 = [];
			  	   		pieChartData2.push(instance_start);
			  	  		pieChartData2.push(instance_stop);
			  	  		pieChartData2.push(instance_error);
			  	   	    
			  	   		pieChart1(pieChartData1);
			  	   		pieChart2(pieChartData2);
			  	   	}
		  	  }
	    	  
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });			
}

//헬스체크 상태
const dpCmMonitoringHealthStatus = function(){
	
    const data = {
	   		url: '/dp/cm/monitoring/health/status',
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',	   	
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpCmMonitoringHealthStatus',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
		  	  if (data != null) {
		  		  
        		  if(errorMsg(data)){
	          	 	 return;  
          	  	  }		  		
			  	   	if(data.contents != ""){    	
			  	   		
			  	   		let server_start = isEmpty(data.contents[0].server_start) === '' ? 0:isEmpty(data.contents[0].server_start);
			  	   		let server_stop = isEmpty(data.contents[0].server_stop) === '' ? 0:isEmpty(data.contents[0].server_stop);
			  	   		$("#server_start_txt").text(server_start);
			  	   		$("#server_stop_txt").text(server_stop);
			  	   		
			  	   		let pieChartData1 = [];
			  	   		pieChartData1.push(server_start);
			  	  		pieChartData1.push(server_stop);
			  	   	    
			  	   		pieChart3(pieChartData1);
			  	   	}
		  	  }
	    	  
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });		
}

//헬스체크 동작
const dpCmMonitoringHealthStart = function(page, size_per_page){
	
	$('#server_start_modal').modal('show');
	
	if(!page){
		page = init_page;
	}
	if(!size_per_page){
		size_per_page = init_size_per_page;
	}
	
	const data = {
	   		url: '/dp/cm/monitoring/health/start',
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',	   	
	   		page_current: page,
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpCmMonitoringHealthStart',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
	    	
	    	  $("#dpCmMonitoringHealthStart").empty();
		  	  if (data != null) {
		  		  
        		  if(errorMsg(data)){
	          	 	 return;  
          	  	  }		  
        		  
        		  $("#total_count").text(data.total_count);
        		  
        	    	if(data.contents != ""){
          	    		
        	     	    let insertTr = '';
        		  	    $.each(data.contents, function (idx, el) {
        	     	          insertTr += '<tr>';
        	                  insertTr += ' <td style="text-align: center;">'+isEmpty(el.server_nm)+'</td>';
        	     		      insertTr += ' <td style="text-align: center;">'+isEmpty(el.status)+'</td>';
        	                  insertTr += '</tr>';
        		  	    });
                  	    $("#dpCmMonitoringHealthStart").append(insertTr);
          	    	}
          	    	
          	    	//페이징 보여줌
          	    	paging(data.total_count, size_per_page, pageCount, page);
		  	  }
	    	  
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });	
}

//헬스체크 중지
const dpCmMonitoringHealthStop = function(page, size_per_page){
	
	$('#server_end_modal').modal('show');
	
	if(!page){
		page = init_page;
	}
	if(!size_per_page){
		size_per_page = init_size_per_page;
	}
	
	const data = {
	   		url: '/dp/cm/monitoring/health/stop',
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',	   	
	   		page_current: page,
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpCmMonitoringHealthStop',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
	    	
	    	  $("#dpCmMonitoringHealthStop").empty();
		  	  if (data != null) {
		  		  
        		  if(errorMsg(data)){
	          	 	 return;  
          	  	  }		  
        		  
        		  $("#total_count").text(data.total_count);
        		  
        	    	if(data.contents != ""){
          	    		
        	     	    let insertTr = '';
        		  	    $.each(data.contents, function (idx, el) {
        	     	          insertTr += '<tr>';
        	                  insertTr += ' <td style="text-align: center;">'+isEmpty(el.server_nm)+'</td>';
        	     		      insertTr += ' <td style="text-align: center;">'+isEmpty(el.status)+'</td>';
        	                  insertTr += '</tr>';
        		  	    });
                  	    $("#dpCmMonitoringHealthStop").append(insertTr);
          	    	}
          	    	
          	    	//페이징 보여줌
          	    	paging2(data.total_count, size_per_page, pageCount, page);
		  	  }
	    	  
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });		
}

//수집현황 연도별
const dpCmMonitoringIngestYear = function(moniteringYear){
	
  	$("#gridTitle").empty();
 	$("#gridData1").empty();	
 	$("#gridData2").empty();	
 	$("#gridData3").empty();	
 	
    const data = {
	   		url: '/dp/cm/monitoring/ingest/year',
	   		year: moniteringYear, 	
	   		id: '',	
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',	   		
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpCmMonitoringIngestYear',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
		  	  if (data != null) {
		  		  
        		  if(errorMsg(data)){
            			return;  
            	  }		  		
			  	   	if(data.contents != ""){    	
			  	   		
			  	   		let chartTitle = [];
			  	   		let data1 = [];
			  	   		let data2 = [];
			  	   		let data3 = [];
			  	   		
				  	   	let insertTh = '<th></th>';
				  	   	let insertTd1 = '<td>요청건수</td>';
				  	   	let insertTd2 = '<td>적재건수</td>';
				  	   	let insertTd3 = '<td>오류건수</td>';
    			  	    $.each(data.contents, function (idx, el) {
    			  	    	
//    			  	    	let year_month = el.year_month.substring(5)+'월';
    			  	    	let year_month = el.year_month;
    			  	    	let ingest_count = isEmpty(el.ingest_count) === '' ? 0:isEmpty(el.ingest_count);
    			  	    	let load_count = isEmpty(el.load_count) === '' ? 0:isEmpty(el.load_count);
    			  	    	let error_count = isEmpty(el.error_count) === '' ? 0:isEmpty(el.error_count);
    			  	    	
    			  	    	insertTh += '<th style="text-align: center;">'+year_month+'</th>';
    			  	    	insertTd1 += '<td style="text-align: center;">'+ingest_count+'</td>';
    			  	    	insertTd2 += '<td style="text-align: center;">'+load_count+'</td>';
    			  	    	insertTd3 += '<td style="text-align: center;">'+error_count+'</td>';
    			  	    	
    			  	    	chartTitle.push(year_month);
    			  	    	
    			  	    	data1.push(ingest_count);
    			  	    	data2.push(load_count);
    			  	    	data3.push(error_count);
    			  	    });
    			  	    
    			  	  	$("#gridTitle").append(insertTh);
    			  	  	$("#gridData1").append(insertTd1);
    			  	  	$("#gridData2").append(insertTd2);
    			  	  	$("#gridData3").append(insertTd3);
    			  	  	
    			  	  	barChart(chartTitle, data1, data2, data3, '2', '');
    			  	    
			  	   	}
		  	  }
	    	  
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });			
}

//수집현황 월별(adapter)
const dpCmMonitoringIngestMonth = function(moniteringYear){
	
  	$("#gridTitle").empty();
 	$("#gridData1").empty();	
 	$("#gridData2").empty();	
 	$("#gridData3").empty();	
 	
    const data = {
	   		url: '/dp/cm/monitoring/ingest/month',
	   		year_month: moniteringYear, 	
	   		id: '',	
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',	   		
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpCmMonitoringIngestMonth',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
		  	  if (data != null) {
		  		  
        		  if(errorMsg(data)){
            			return;  
            	  }		  		
			  	   	if(data.contents != ""){    	
			  	   		
			  	   		let chartTitle = [];
			  	   		let data1 = [];
			  	   		let data2 = [];
			  	   		let data3 = [];
			  	   		
				  	   	let insertTh = '<th></th>';
				  	   	let insertTd1 = '<td>요청건수</td>';
				  	   	let insertTd2 = '<td>적재건수</td>';
				  	   	let insertTd3 = '<td>오류건수</td>';
    			  	    $.each(data.contents, function (idx, el) {
    			  	    	
//    			  	    	let year_month = el.year_month.substring(5)+'월';
    			  	    	let adapter_id = el.adapter_id;
    			  	    	let ingest_count = isEmpty(el.ingest_count) === '' ? 0:isEmpty(el.ingest_count);
    			  	    	let load_count = isEmpty(el.load_count) === '' ? 0:isEmpty(el.load_count);
    			  	    	let error_count = isEmpty(el.error_count) === '' ? 0:isEmpty(el.error_count);
    			  	    	
    			  	    	insertTh += '<th>'+adapter_id+'</th>';
    			  	    	insertTd1 += '<td>'+ingest_count+'</td>';
    			  	    	insertTd2 += '<td>'+load_count+'</td>';
    			  	    	insertTd3 += '<td>'+error_count+'</td>';
    			  	    	
    			  	    	chartTitle.push(adapter_id);
    			  	    	
    			  	    	data1.push(ingest_count);
    			  	    	data2.push(load_count);
    			  	    	data3.push(error_count);
    			  	    });
    			  	    
    			  	  	$("#gridTitle").append(insertTh);
    			  	  	$("#gridData1").append(insertTd1);
    			  	  	$("#gridData2").append(insertTd2);
    			  	  	$("#gridData3").append(insertTd3);
    			  	  	
    			  	  	barChart(chartTitle, data1, data2, data3, '3', moniteringYear);
    			  	    
			  	   	}
		  	  }
	    	  
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });			
}

//수집현황(instance)
const dpCmMonitoringIngestIt = function(moniteringYear, adapterId){
	
  	$("#gridTitle").empty();
 	$("#gridData1").empty();	
 	$("#gridData2").empty();	
 	$("#gridData3").empty();	
 	
    const data = {
	   		url: '/dp/cm/monitoring/ingest/instance',
	   		year_month: moniteringYear, 	
	   		adapter_id: adapterId,
	   		id: '',	
	   		user_id: 'user00',	
	   		menu_id: 'menu_id',	   		
	    };		
	    
	    $.ajax({
	        type: 'POST',
	        url: url+'/dpCmMonitoringIngestIt',
	        dataType: 'json',
	        contentType: 'application/json; charset-utf-8',
	        data: JSON.stringify(data)
	    }).done(function (data) {
		  	  if (data != null) {
		  		  
        		  if(errorMsg(data)){
            			return;  
            	  }		  		
			  	   	if(data.contents != ""){    	
			  	   		
			  	   		let chartTitle = [];
			  	   		let data1 = [];
			  	   		let data2 = [];
			  	   		let data3 = [];
			  	   		
				  	   	let insertTh = '<th></th>';
				  	   	let insertTd1 = '<td>요청건수</td>';
				  	   	let insertTd2 = '<td>적재건수</td>';
				  	   	let insertTd3 = '<td>오류건수</td>';
    			  	    $.each(data.contents, function (idx, el) {
    			  	    	
//    			  	    	let year_month = el.year_month.substring(5)+'월';
    			  	    	let instance_id = el.instance_id;
    			  	    	let ingest_count = isEmpty(el.ingest_count) === '' ? 0:isEmpty(el.ingest_count);
    			  	    	let load_count = isEmpty(el.load_count) === '' ? 0:isEmpty(el.load_count);
    			  	    	let error_count = isEmpty(el.error_count) === '' ? 0:isEmpty(el.error_count);
    			  	    	
    			  	    	insertTh += '<th>'+instance_id+'</th>';
    			  	    	insertTd1 += '<td>'+ingest_count+'</td>';
    			  	    	insertTd2 += '<td>'+load_count+'</td>';
    			  	    	insertTd3 += '<td>'+error_count+'</td>';
    			  	    	
    			  	    	chartTitle.push(instance_id);
    			  	    	
    			  	    	data1.push(ingest_count);
    			  	    	data2.push(load_count);
    			  	    	data3.push(error_count);
    			  	    });
    			  	    
    			  	  	$("#gridTitle").append(insertTh);
    			  	  	$("#gridData1").append(insertTd1);
    			  	  	$("#gridData2").append(insertTd2);
    			  	  	$("#gridData3").append(insertTd3);
    			  	  	
    			  	  	barChart(chartTitle, data1, data2, data3, '4', '');
    			  	    
			  	   	}
		  	  }
	    	  
	    }).fail(function (error) {
	        alert(JSON.stringify(error));
	    });			
}

//수집현황 연도
const dpCmMonitoringYear = function(){
	
	$("#moniteringYear").empty();
	
    const data = {
   		url: '/dp/cm/monitoring/year',
   		id: "",
   		user_id: 'user00',	
   		menu_id: 'menu_id',	      		
    };		
    
    $.ajax({
        type: 'POST',
        url: url+'/dpCmMonitoringYear',
        dataType: 'json',
        contentType: 'application/json; charset-utf-8',
        data: JSON.stringify(data)
    }).done(function (data) {
    	
	  	  if (data != null) {
	  		  
    		  if(errorMsg(data)){
  	          	 return;  
       	  	  }	
	  		
	  	      if(data.contents != ""){    	    	
  				 let selOp = '';  
    	   		 $.each(data.contents, function (idx, el) {
    	   			 
    				 selOp += '<option value="'+el.monitering_year+'">' + el.monitering_year + '</option>';
    				 
 	     	     });
	 	     	 $("#moniteringYear").append(selOp);        	
	 	     	 
    	   		 $.each(data.contents, function (idx, el) {
    	   			 if(idx == 0){
    	   				dpCmMonitoringIngestYear(el.monitering_year);
    	   			 }
 	     	     });
	  	   	  }
	  	  }
    	  
    }).fail(function (error) {
        alert(JSON.stringify(error));
    });	
}

//페이징 함수 호출
const pagingFun = function(page, size_per_page){
	dpCmMonitoringHealthStart(page, size_per_page);
}

//페이징 함수 호출
const pagingFun2 = function(page, size_per_page){
	dpCmMonitoringHealthStop(page, size_per_page);
}

//서버동작 바로가기
const serverStatusPage = function(){
	location.href = url + "/serverStatus";
}

//로그 바로가기
const logPage = function(){
	location.href = url + "/log";
}

//수집현황 연도
dpCmMonitoringYear();

//수집동작현황
dpCmMoniteringStatus();

//헬스체크 상태
dpCmMonitoringHealthStatus();

//데이터로그
dpCmMoniteringLogs();

</script>

